#!/sbin/openrc-run

description="Manage Broadcom wireless driver loading based on detected PCI IDs."

depend() {
    need mountall
    after netnetworking
}

detect_broadcom_chip() {
    lspci -vnn -d 14e4: | grep -E "14e4:(4307|4318|4319|4322|4350|43a9|43aa|4301|4306|4320|4324|4325|4321|a8d6|a8db|a99d|0576|a8d8|4313|4328|4329|432a|432b|432d|4312|4311|4315|432c|4331|4358|4359|4353|4357|4727|43a0|4365|4360|43b1)"
}

start() {
    local CHIP=$(detect_broadcom_chip)

    if [ -z "$CHIP" ]; then
        eerror "No supported Broadcom wireless chip detected."
        return 1
    fi

    ebegin "Bringing down any wireless interfaces"
    ip link set wlan0 down >/dev/null 2>&1
    eend $? "Failed to bring down wlan0"

    ebegin "Checking for loaded wireless modules"
    lsmod | grep -E "(brcmsmac|cfg80211|cordic|brcmutil|bcma|wl|b43|b43legacy)" >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        ebegin "Removing existing wireless modules"
        TIME_START=$(date +%s)
        modprobe -r wl brcmsmac b43 b43legacy cfg80211 cordic brcmutil bcma >/dev/null 2>&1
        TIME_END=$(date +%s)
        eend $? "Failed to remove wireless modules"
        echo "Unloading modules took $(($TIME_END - $TIME_START)) seconds"
    fi

    case "$CHIP" in
        *"14e4:4307"*|*"14e4:4318"*|*"14e4:4319"*|*"14e4:4322"*|*"14e4:4350"*|*"14e4:43a9"*|*"14e4:43aa"*)
            ebegin "Loading b43 driver"
            TIME_START=$(date +%s)
            modprobe b43
            TIME_END=$(date +%s)
            ;;

        *"14e4:4301"*|*"14e4:4306"*|*"14e4:4320"*|*"14e4:4324"*|*"14e4:4325"*)
            ebegin "Loading b43legacy driver"
            TIME_START=$(date +%s)
            modprobe b43legacy
            TIME_END=$(date +%s)
            ;;

        *"14e4:4321"*|*"14e4:a8d6"*|*"14e4:a8db"*|*"14e4:a99d"*)
            ebegin "Loading b43 driver (partial or untested)"
            TIME_START=$(date +%s)
            modprobe b43
            TIME_END=$(date +%s)
            ;;

        *"14e4:0576"*|*"14e4:a8d8"*)
            ebegin "Loading brcmsmac driver"
            TIME_START=$(date +%s)
            modprobe brcmsmac
            TIME_END=$(date +%s)
            ;;

        *"14e4:4313"*|*"14e4:4328"*|*"14e4:4329"*|*"14e4:432a"*|*"14e4:432b"*|*"14e4:432d"*)
            ebegin "Loading wl driver"
            TIME_START=$(date +%s)
            modprobe wl
            TIME_END=$(date +%s)
            ;;

        *"14e4:4312"*|*"14e4:4311"*|*"14e4:4315"*|*"14e4:432c"*|*"14e4:4331"*|*"14e4:4358"*|*"14e4:4359"*)
            ebegin "Loading wl driver"
            TIME_START=$(date +%s)
            modprobe wl
            TIME_END=$(date +%s)
            ;;

        *"14e4:4353"*|*"14e4:4357"*|*"14e4:4727"*)
            ebegin "Loading wl driver"
            TIME_START=$(date +%s)
            modprobe wl
            TIME_END=$(date +%s)
            ;;

        *"14e4:43a0"*|*"14e4:4365"*)
            ebegin "Loading wl driver"
            TIME_START=$(date +%s)
            modprobe wl
            TIME_END=$(date +%s)
            ;;

        *"14e4:4360"*|*"14e4:43b1"*)
            eerror "No driver available for PCI ID: $CHIP"
            return 1
            ;;

        *)
            eerror "No driver available for PCI ID: $CHIP"
            return 1
            ;;
    esac
    eend $? "Failed to load the appropriate driver"
    echo "Loading the driver took $(($TIME_END - $TIME_START)) seconds"

    ebegin "Bringing up wireless interface wlan0"
    ip link set wlan0 up >/dev/null 2>&1
    eend $? "Failed to bring up wlan0"
}

stop() {
    ebegin "Bringing down wireless interface wlan0"
    ip link set wlan0 down >/dev/null 2>&1
    eend $? "Failed to bring down wlan0"

    ebegin "Removing wireless modules"
    modprobe -r wl brcmsmac b43 b43legacy cfg80211 cordic brcmutil bcma >/dev/null 2>&1
    eend $? "Failed to remove wireless modules"
}

reload() {
    ebegin "Reloading wireless driver"
    stop
    start
    eend $?
}
