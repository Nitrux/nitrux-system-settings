#!/usr/bin/env bash

#############################################################################################################################################################################
#   The license used for this file and its contents is: BSD-3-Clause                                                                                                        #
#                                                                                                                                                                           #
#   Copyright <2024-2025> <Uri Herrera <uri_herrera@nxos.org>>                                                                                                              #
#                                                                                                                                                                           #
#   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:                          #
#                                                                                                                                                                           #
#    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.                                        #
#                                                                                                                                                                           #
#    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer                                      #
#       in the documentation and/or other materials provided with the distribution.                                                                                         #
#                                                                                                                                                                           #
#    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software                    #
#       without specific prior written permission.                                                                                                                          #
#                                                                                                                                                                           #
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,                      #
#    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS                  #
#    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE                 #
#    GOODS OR SERVICES; LOSS OF USE, DATA,   OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,                      #
#    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
#############################################################################################################################################################################

set -eu


# -- Define log file

LOG_FILE="$HOME/.nx-documentation.log"
MAX_LOG_SIZE=$((1024 * 1024))


# -- Functions.

log_message() {
    if [ -f "$LOG_FILE" ] && [ "$(stat --format=%s "$LOG_FILE")" -ge "$MAX_LOG_SIZE" ]; then
        mv "$LOG_FILE" "$LOG_FILE.bak"
        echo "$(date +'%Y-%m-%d %H:%M:%S') - Log rotated. Previous log saved as .nx-documentation.log.bak" > "$LOG_FILE"
    fi
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}


# -- Redirect stdout and stderr to log file.

exec >>"$LOG_FILE" 2>&1

log_message "Script started."


# -- Check if ~/.config/user-dirs.dirs exists and wait if necessary.

log_message "Checking for ~/.config/user-dirs.dirs file."
while [ ! -f "$HOME/.config/user-dirs.dirs" ]; do
    log_message "File ~/.config/user-dirs.dirs not found. Waiting..."
    sleep 5
done

log_message "Found ~/.config/user-dirs.dirs file."


# -- Define DESKTOP_DIR based on XDG_DESKTOP_DIR setting in ~/.config/user-dirs.dirs.

DESKTOP_DIR=$(grep -oP '(?<=XDG_DESKTOP_DIR=).+' ~/.config/user-dirs.dirs | sed "s/^\"\(.*\)\"$/\1/" | sed "s|\$HOME|$HOME|")

if [ -z "$DESKTOP_DIR" ] || [ ! -d "$DESKTOP_DIR" ]; then
    log_message "XDG_DESKTOP_DIR not set or invalid. Defaulting to $HOME/Desktop."
    DESKTOP_DIR="$HOME/Desktop"
    mkdir -p "$DESKTOP_DIR"
fi


# -- Ensure Documentation directory exists on Desktop.

log_message "Ensuring Documentation directory exists on Desktop."
if [ ! -d "$DESKTOP_DIR/Documentation" ]; then
    cp -R "/etc/skel/Desktop/Documentation" "$DESKTOP_DIR"
    log_message "Copied Documentation to $DESKTOP_DIR."
elif [ -d "$DESKTOP_DIR/Documentation" ] && [ ! -f "$DESKTOP_DIR/.nx-docs-check" ]; then
    touch "$DESKTOP_DIR/.nx-docs-check"
    log_message "Documentation check file created."
fi

sleep 3


# -- Update tutorials if thereâ€™s new content.

PERSISTENT_DIR="$HOME/.cache/documentation_repo"
REPO_URL="https://github.com/Nitrux/storage.git"

log_message "Checking for updates in the repository."
if [ -d "$PERSISTENT_DIR/.git" ]; then
    if git -C "$PERSISTENT_DIR" status > /dev/null 2>&1; then
        git -C "$PERSISTENT_DIR" reset --hard
        git -C "$PERSISTENT_DIR" clean -fd
        log_message "Reset and cleaned local repository at $PERSISTENT_DIR."
        DEFAULT_BRANCH=$(git -C "$PERSISTENT_DIR" remote show origin | awk '/HEAD branch:/ {print $NF}')
        DEFAULT_BRANCH=${DEFAULT_BRANCH:-master}
        if ! git -C "$PERSISTENT_DIR" rev-parse --abbrev-ref --symbolic-full-name "@{u}" > /dev/null 2>&1; then
            git -C "$PERSISTENT_DIR" branch --set-upstream-to="origin/$DEFAULT_BRANCH" "$DEFAULT_BRANCH"
            log_message "Set upstream branch to origin/$DEFAULT_BRANCH."
        fi
        if ! git -C "$PERSISTENT_DIR" pull --depth=1 --rebase --allow-unrelated-histories; then
            log_message "Failed to pull updates with unrelated histories. Attempting a hard reset and re-clone."
            rm -rf "$PERSISTENT_DIR"
            if git clone --depth=1 "$REPO_URL" "$PERSISTENT_DIR"; then
                log_message "Cloned repository from $REPO_URL to $PERSISTENT_DIR."
            else
                log_message "Failed to clone repository. Falling back to local copy."
            fi
        else
            log_message "Pulled updates successfully."
        fi
    else
        rm -rf "$PERSISTENT_DIR"
        log_message "Local repository was not functional. Deleted and re-cloning."
        if git clone --depth=1 "$REPO_URL" "$PERSISTENT_DIR"; then
            log_message "Cloned repository from $REPO_URL to $PERSISTENT_DIR."
        else
            log_message "Failed to clone repository. Falling back to local copy."
        fi
    fi
else
    if git clone --depth=1 "$REPO_URL" "$PERSISTENT_DIR"; then
        log_message "Cloned repository from $REPO_URL to $PERSISTENT_DIR."
    else
        log_message "Failed to clone repository. Falling back to local copy."
    fi
fi


# -- Replace the Documentation directory if updates were pulled successfully or the repository was re-cloned.

if [ -d "$PERSISTENT_DIR/Other/Documentation" ]; then
    log_message "Replacing $DESKTOP_DIR/Documentation with contents from $PERSISTENT_DIR/Other/Documentation."
    rm -rf "$DESKTOP_DIR/Documentation"
    cp -R "$PERSISTENT_DIR/Other/Documentation" "$DESKTOP_DIR/Documentation"
    log_message "Successfully replaced $DESKTOP_DIR/Documentation."
else
    log_message "No updated Documentation found in $PERSISTENT_DIR/Other/Documentation. Skipping replacement."
fi

sleep 3


# -- Fallback: Copy local Documentation only if it doesn't already exist.

if [ ! -d "$DESKTOP_DIR/Documentation" ]; then
    cp -R "/etc/skel/Desktop/Documentation" "$DESKTOP_DIR"
    log_message "Fallback: Copied local Documentation to $DESKTOP_DIR."
else
    log_message "Fallback: Documentation directory already exists. Skipping copy."
fi

log_message "Script completed."
